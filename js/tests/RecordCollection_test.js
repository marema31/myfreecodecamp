collection = collectionCopy; assert(updateRecords(5439, "artist", "ABBA")[5439]["artist"] === "ABBA", 'message: After <code>updateRecords(5439, "artist", "ABBA")</code>, <code>artist</code> should be <code>"ABBA"</code>');
assert(updateRecords(5439, "tracks", "Take a Chance on Me")[5439]["tracks"].pop() === "Take a Chance on Me", 'message: After <code>updateRecords(5439, "tracks", "Take a Chance on Me")</code>, <code>tracks</code> should have <code>"Take a Chance on Me"</code> as the last element.');
updateRecords(2548, "artist", ""); assert(!collection[2548].hasOwnProperty("artist"), 'message: After <code>updateRecords(2548, "artist", "")</code>, <code>artist</code> should not be set');
assert(updateRecords(1245, "tracks", "Addicted to Love")[1245]["tracks"].pop() === "Addicted to Love", 'message: After <code>updateRecords(1245, "tracks", "Addicted to Love")</code>, <code>tracks</code> should have <code>"Addicted to Love"</code> as the last element.');
assert(updateRecords(2468, "tracks", "Free")[2468]["tracks"][0] === "1999", 'message: After <code>updateRecords(2468, "tracks", "Free")</code>, <code>tracks</code> should have <code>"1999"</code> as the first element.');
updateRecords(2548, "tracks", ""); assert(!collection[2548].hasOwnProperty("tracks"), 'message: After <code>updateRecords(2548, "tracks", "")</code>, <code>tracks</code> should not be set');
